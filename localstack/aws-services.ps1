# Crear secretos en LocalStack basados en archivos JSON
$secretsPath = "$PSScriptRoot/secrets"
$endpoint = "http://localhost:4566"

# Verificar que la carpeta secrets existe
if (-not (Test-Path $secretsPath)) {
    Write-Host "‚ùå La carpeta secrets no existe: $secretsPath" -ForegroundColor Red
    exit 1
}

# Verificar conexi√≥n a LocalStack usando IPv4 espec√≠ficamente
Write-Host "üîç Verificando conexi√≥n a LocalStack..." -ForegroundColor Cyan
try {
    $testConnection = Test-NetConnection -ComputerName "127.0.0.1" -Port 4566 -InformationLevel Quiet
    if ($testConnection) {
        Write-Host "‚úÖ LocalStack est√° ejecut√°ndose en puerto 4566" -ForegroundColor Green
    } else {
        Write-Host "‚ùå No se puede conectar al puerto 4566" -ForegroundColor Red
        Write-Host "‚ö†Ô∏è  Ejecuta: docker-compose up -d localstack" -ForegroundColor Yellow
        exit 1
    }
} catch {
    Write-Host "‚ùå Error al verificar conexi√≥n: $_" -ForegroundColor Red
    exit 1
}

# Obtener todos los archivos JSON en la carpeta secrets
$jsonFiles = Get-ChildItem -Path $secretsPath -Filter "*.json"

if ($jsonFiles.Count -eq 0) {
    Write-Host "‚ö†Ô∏è  No se encontraron archivos JSON en: $secretsPath" -ForegroundColor Yellow
    exit 0
}

Write-Host "üöÄ Creando secretos en LocalStack..." -ForegroundColor Cyan
Write-Host "üìÅ Carpeta: $secretsPath" -ForegroundColor Gray
Write-Host "üåê Endpoint: $endpoint" -ForegroundColor Gray
Write-Host ""

$successCount = 0
$errorCount = 0

foreach ($file in $jsonFiles) {
    $secretName = $file.BaseName  # Nombre del archivo sin extensi√≥n
    $filePath = $file.FullName
    
    Write-Host "üìÑ Procesando: $($file.Name)" -ForegroundColor White
    
    try {
        # Crear el secreto
        aws --endpoint-url $endpoint secretsmanager create-secret `
            --name $secretName `
            --description "Secret from $($file.Name)" `
            --secret-string file://$filePath 2>$null
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "   ‚úÖ Secreto '$secretName' creado exitosamente" -ForegroundColor Green
            $successCount++
        } else {
            Write-Host "   ‚ùå Error al crear secreto '$secretName'" -ForegroundColor Red
            $errorCount++
        }
    }
    catch {
        Write-Host "   ‚ùå Excepci√≥n al crear secreto '$secretName': $_" -ForegroundColor Red
        $errorCount++
    }
    
    Write-Host ""
}

# Mostrar resumen final
if ($errorCount -eq 0) {
    Write-Host "üéâ Proceso completado exitosamente!" -ForegroundColor Green
    Write-Host "‚úÖ $successCount secreto(s) creado(s)" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Proceso completado con errores" -ForegroundColor Yellow
    Write-Host "‚úÖ $successCount secreto(s) creado(s)" -ForegroundColor Green
    Write-Host "‚ùå $errorCount error(es)" -ForegroundColor Red
}

Write-Host ""
Write-Host "üìã Para verificar los secretos creados:" -ForegroundColor Cyan
Write-Host "aws --endpoint-url $endpoint secretsmanager list-secrets" -ForegroundColor Gray